unit unt.front.endereco.dao;

interface

uses
  REST.Types,
  REST.Client,
  REST.Json,
  System.JSON,
  System.SysUtils,
  frm.dm.front,
  unt.endereco.model;

implementation

type
  TFEnderecoDao = class
  private
    FDM           : TFDM;
    FMessageError : String;
    FStatusCode   : Integer;
    FEndereco     : TEndereco;
    FBaseUrl      : String;

    procedure setStatusCode(AValue: Integer);
    procedure setMessageError(AValue: String);
    procedure ConsultaCep(ABaseUrl: String);
  public
    constructor Create();
    destructor Destroy; Override;

    function getStatusCode: Integer;
    function getMessageError: String;
    function Load(ACep: String): TEndereco;
  end;

constructor TFEnderecoDao.Create;
begin
  FEndereco := TEndereco.Create;
  FDM       := TFDM.Create(nil);
  FBaseUrl  := 'http://localhost:9000/buscacep/'
end;

destructor TFEnderecoDao.Destroy;
begin
  FDM.Free;
  inherited;
end;

function TFEnderecoDao.getStatusCode: Integer;
begin
  Result := FStatusCode;
end;

function TFEnderecoDao.getMessageError: String;
begin
  Result := FMessageError;
end;

procedure TFEnderecoDao.ConsultaCep(ABaseUrl: String);
begin
  try
    FDM.RESTRequest.Method := rmGET;
    FDM.RESTClient.BaseURL := ABaseUrl;
    FDM.RESTClient.Accept  := 'application/json';
    FDM.RESTRequest.Execute;
    setStatusCode(FDM.RESTRequest.Response.StatusCode);
  except
    setMessageError(FDM.RESTRequest.Response.StatusText);
  end;
end;

procedure TFEnderecoDao.setStatusCode(AValue: Integer);
begin
  FStatusCode := AValue;
end;

procedure TFEnderecoDao.setMessageError(AValue: String);
begin
  FMessageError := AValue;
end;

function TFEnderecoDao.Load(ACep: String): TEndereco;
begin
  try
    FBaseUrl := FBaseUrl + ACep;
    ConsultaCep(FBaseUrl);
    if getStatusCode = 200 then
      FEndereco := TJson.JsonToObject<TEndereco>(Trim(FDM.RESTRequest.Response.JSONText))
  finally
    Result := FEndereco;
  end;
end;

end.
